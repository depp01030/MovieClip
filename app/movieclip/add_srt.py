import os
import whisper
from pathlib import Path
import re
#%%
def format_time(seconds):
    h = int(seconds // 3600)
    m = int((seconds % 3600) // 60)
    s = seconds % 60
    return f"{h:02}:{m:02}:{s:06.3f}".replace('.', ',')

def create_srt_for_video(video_path):
    """
    使用 Whisper 模型將視頻轉換為 SRT 字幕文件
    :param video_path: 視頻文件路徑
    :param srt_path: 輸出 SRT 文件路徑
    """ 
    try:
        model = whisper.load_model("medium")  # 可選 tiny, base, small, medium, large
        result = model.transcribe(video_path)


        srt_path = video_path.replace(".mp4", ".srt")  # 假設視頻是 mp4 格式

        # 儲存為 SRT 字幕
        with open(srt_path, "w", encoding="utf-8") as f:
            for i, segment in enumerate(result["segments"]):
                start = segment["start"]
                end = segment["end"]
                text = segment["text"].strip()

                f.write(f"{i+1}\n")
                f.write(f"{format_time(start)} --> {format_time(end)}\n")
                f.write(f"{text}\n\n")
        return srt_path
    except Exception as e:
        print(f"❌ 錯誤：{e}")
        return None
    


def generate_ass_from_mp4(video_path: Path, keywords: list[str]):
    output_path = video_path.replace('.mp4', '.ass')
    model = whisper.load_model("base")
    result = model.transcribe(str(video_path))
    def seconds_to_ass_time(seconds):
        h = int(seconds // 3600)
        m = int((seconds % 3600) // 60)
        s = seconds % 60
        return f"{h:d}:{m:02d}:{s:05.2f}".replace(".", ".")

    try:
        with open(output_path, "w", encoding="utf-8") as f:
            # ASS header，黃色粗體
            f.write("""[Script Info]
Title: Generated by Whisper
ScriptType: v4.00+
PlayResX: 1280
PlayResY: 720

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,36,&H0000FFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,0,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
""")

            for seg in result["segments"]:
                start = seconds_to_ass_time(seg["start"])
                end = seconds_to_ass_time(seg["end"])
                text = seg["text"].strip()
                # 直接套用粗體黃字樣式，不再處理關鍵字
                f.write(f"Dialogue: 0,{start},{end},Default,,0,0,0,,{text}\n")
        return output_path
    except Exception as e:
        print(f"❌ 錯誤：{e}")
        return None
def create_srt_for_folder(term_folder): 
    keywords = [os.path.basename(term_folder)]
    for filename in os.listdir(term_folder):
        if filename.endswith("sub.mp4"):
            continue
        if filename.endswith(".mp4"):
            video_path = os.path.join(term_folder, filename)

            # srt_path = create_srt_for_video(video_path = video_path)
            
            srt_path = generate_ass_from_mp4(video_path, keywords)
             
            if not os.path.exists(srt_path):
                print(f"🎬 轉換 {video_path} 為 SRT 字幕")
                # create_srt(video_path)  # Uncomment this line to create SRT files
            else:
                print(f"✅ 已存在字幕檔：{srt_path}")
    
if __name__ == "__main__":
    video_path = "downloads/i am surprised/1.mp4"  # 替換為你的視頻文件路徑
    term_folder = "downloads/i am surprised"  # 替換為你的視頻文件夾路徑
    
    # create_srt_for_video(video_path)
    create_srt_for_folder(term_folder)